# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-22 16:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=10000, null=True)),
                ('isbn', models.CharField(blank=True, max_length=100, null=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('ratings_count', models.IntegerField(blank=True, null=True)),
                ('image_url', models.CharField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('movie_id', models.CharField(max_length=10000, primary_key=True, serialize=False)),
                ('budget', models.FloatField(blank=True, null=True)),
                ('genres', models.CharField(blank=True, max_length=10000, null=True)),
                ('homepage', models.CharField(blank=True, max_length=10000, null=True)),
                ('title', models.CharField(max_length=10000)),
                ('overview', models.CharField(blank=True, max_length=10000, null=True)),
                ('tagline', models.CharField(blank=True, max_length=10000, null=True)),
                ('vote_average', models.FloatField(blank=True, null=True)),
                ('release_date', models.CharField(blank=True, max_length=10000, null=True)),
                ('production_companies', models.CharField(blank=True, max_length=10000, null=True)),
                ('spoken_languages', models.CharField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty', models.IntegerField()),
                ('hyperlink', models.CharField(max_length=4000)),
                ('image_hyperlink', models.CharField(max_length=4000)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10000, null=True)),
                ('artist', models.CharField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserBookMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Book')),
            ],
        ),
        migrations.CreateModel(
            name='UserMedoids',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_name', models.CharField(max_length=12)),
                ('user_id', models.CharField(max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='UserMovieMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user_id', models.CharField(max_length=10000, primary_key=True, serialize=False, verbose_name='userid')),
                ('word_reading_ability', models.IntegerField(blank=True, null=True)),
                ('white_wine_liking', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('vitamin_e', models.IntegerField(blank=True, null=True)),
                ('vitamin_d', models.IntegerField(blank=True, null=True)),
                ('vitamin_b12', models.IntegerField(blank=True, null=True)),
                ('vitamin_a', models.IntegerField(blank=True, null=True)),
                ('type_2_diabetes', models.IntegerField(blank=True, null=True)),
                ('smoking_behavior', models.IntegerField(blank=True, null=True)),
                ('smell_sensitivity_for_malt', models.IntegerField(blank=True, null=True)),
                ('skin_pigmentation', models.IntegerField(blank=True, null=True)),
                ('reward_dependence', models.IntegerField(blank=True, null=True)),
                ('response_to_vitamin_e_supplementation', models.IntegerField(blank=True, null=True)),
                ('red_wine_liking', models.IntegerField(blank=True, null=True)),
                ('red_hair', models.IntegerField(blank=True, null=True)),
                ('reading_and_spelling_ability', models.IntegerField(blank=True, null=True)),
                ('protein_intake', models.IntegerField(blank=True, null=True)),
                ('prostate_cancer', models.IntegerField(blank=True, null=True)),
                ('phosphorus', models.IntegerField(blank=True, null=True)),
                ('peanuts_allergy', models.IntegerField(blank=True, null=True)),
                ('pancreatic_cancer', models.IntegerField(blank=True, null=True)),
                ('openness', models.IntegerField(blank=True, null=True)),
                ('novelty_seeking', models.IntegerField(blank=True, null=True)),
                ('nicotine_dependence', models.IntegerField(blank=True, null=True)),
                ('neuroticism', models.IntegerField(blank=True, null=True)),
                ('myocardial_infarction', models.IntegerField(blank=True, null=True)),
                ('motion_sickness', models.IntegerField(blank=True, null=True)),
                ('morning_person', models.IntegerField(blank=True, null=True)),
                ('milk_allergy', models.IntegerField(blank=True, null=True)),
                ('male_pattern_baldness_aga', models.IntegerField(blank=True, null=True)),
                ('magnesium', models.IntegerField(blank=True, null=True)),
                ('lung_cancer', models.IntegerField(blank=True, null=True)),
                ('longevity', models.IntegerField(blank=True, null=True)),
                ('lobe_size', models.IntegerField(blank=True, null=True)),
                ('liver_cancer', models.IntegerField(blank=True, null=True)),
                ('iron', models.IntegerField(blank=True, null=True)),
                ('hearing_function', models.IntegerField(blank=True, null=True)),
                ('harm_avoidance', models.IntegerField(blank=True, null=True)),
                ('handedness', models.IntegerField(blank=True, null=True)),
                ('gastric_cancer', models.IntegerField(blank=True, null=True)),
                ('gambling', models.IntegerField(blank=True, null=True)),
                ('freckles', models.IntegerField(blank=True, null=True)),
                ('folate', models.IntegerField(blank=True, null=True)),
                ('eye_color', models.IntegerField(blank=True, null=True)),
                ('extraversion', models.IntegerField(blank=True, null=True)),
                ('endurance_performance', models.IntegerField(blank=True, null=True)),
                ('egg_allergy', models.IntegerField(blank=True, null=True)),
                ('depression', models.IntegerField(blank=True, null=True)),
                ('conscientiousness', models.IntegerField(blank=True, null=True)),
                ('colorectal_cancer', models.IntegerField(blank=True, null=True)),
                ('childhood_intelligence', models.IntegerField(blank=True, null=True)),
                ('carbohydrate_intake', models.IntegerField(blank=True, null=True)),
                ('calcium', models.IntegerField(blank=True, null=True)),
                ('caffeine_metabolite_ratio', models.IntegerField(blank=True, null=True)),
                ('caffeine_consumption', models.IntegerField(blank=True, null=True)),
                ('breast_cancer', models.IntegerField(blank=True, null=True)),
                ('bmi', models.IntegerField(blank=True, null=True)),
                ('black_hair', models.IntegerField(blank=True, null=True)),
                ('bitter_taste', models.IntegerField(blank=True, null=True)),
                ('beta_carotene', models.IntegerField(blank=True, null=True)),
                ('beard_thickness', models.IntegerField(blank=True, null=True)),
                ('anger', models.IntegerField(blank=True, null=True)),
                ('alpha_linolenic_acid', models.IntegerField(blank=True, null=True)),
                ('alcohol_drinking_behavior', models.IntegerField(blank=True, null=True)),
                ('agreeableness', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(default='pass', max_length=10000)),
                ('cluster_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('authenticated', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserSongMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.UserProfile')),
            ],
        ),
        migrations.AddField(
            model_name='usermoviemap',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.UserProfile'),
        ),
        migrations.AddField(
            model_name='userbookmap',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.UserProfile'),
        ),
    ]
